class Solution {
    public int sumSubarrayMins(int[] arr) {
        long ans = 0;
        int MOD = 1000000007;
        int n = arr.length;
        Stack<Integer> st = new Stack<>();
        st.push(-1);
        for(int i = 0; i <= n; i++){
            int val = i  < n ? arr[i] : 0;
            while(st.peek() != -1 && val < arr[st.peek()]){
                int idx = st.pop();
                int left = idx - st.peek();
                int right = i - idx;
                long p = (long)(left * right * (long)arr[idx]) % MOD;
                ans += p;
                ans = ans % MOD;
            }
            st.push(i);
        }
        return (int)ans;
    }
}
