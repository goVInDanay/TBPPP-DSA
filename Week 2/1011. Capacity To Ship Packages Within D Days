class Solution {
    int ans=Integer.MAX_VALUE;
    public int shipWithinDays(int[] weights, int days) {
        int sum=0;
        for(int i=0;i<weights.length;i++)
        sum+=weights[i];
        ans=Integer.MAX_VALUE;
        int start = 1;
        int end = sum;
        while(start <= end){
            int mid = start + (end - start) / 2;
            int d = daysRequired(weights, mid);
            if(d <= days && d != -1){
                ans = Math.min(ans, mid);
                end = mid - 1;
            }
            else{
                start = mid + 1;
            }
        }
        return ans;
    }
    public int daysRequired(int weights[],int capacity){
        int days=0;
        int sum=0;
        for(int i=0;i<weights.length;i++){
            if(weights[i]>capacity)
            return -1;
            if(sum+weights[i]<capacity)
            sum+=weights[i];
            else if(sum+weights[i]==capacity){
                sum=0;
                days++;
            }
            else{
                days++;
                sum=0;
                sum+=weights[i];
            }
            if(i==weights.length-1 && sum<capacity && sum>0)
            days++;
        }
        return days;
    }
}
