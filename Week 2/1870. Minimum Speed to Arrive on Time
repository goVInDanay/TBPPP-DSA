class Solution {
    public int minSpeedOnTime(int[] dist, double hour) {
        if(hour < dist.length-1){
            return -1;
        }
        int start = 0;
        int end = 10000000;
        int ans = -1;
        while(start <= end){
            int mid = start + (end - start) / 2;            
            if(isPossible(dist, hour, mid)){
                ans = mid;
                end = mid - 1;
            }
            else{
                start = mid + 1;
            }
        }
        return ans;
    }
    private boolean isPossible(int [] dist, double hour, double mid){
        double time = 0;
        int i = 0;
        while(time <= hour && i < dist.length-1){
            time += Math.ceil(dist[i]/mid);
            i++;
        }
        time += dist[dist.length-1] / mid;
        return time <= hour;
    }
}
